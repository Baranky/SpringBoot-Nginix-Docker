version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    networks:
      - app_network
    restart: always

  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app1
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1905
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    networks:
      - app_network
    depends_on:
      - db
      - redis
    restart: always

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1905
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    networks:
      - app_network
    depends_on:
      - db
      - redis
    restart: always

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1905
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always

  redis:
    image: redis:latest
    container_name: redis_cache
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
